{"version":3,"sources":["header/nav/index.js","header/nav/Nav.js","header/Header.js","feature/Feature.js","feature/index.js","blog/post/Post.js","blog/Blog.js","contact/Contact.js","article/Article.js","footer/index.js","footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggleMenu","trigger","state","setState","handleCloseMenu","_this2","react_default","a","createElement","react","className","Route","exact","children","Link","name","to","onClick","handler","Component","Header","id","path","nav","Breadcrumbs","Feature","featureTitle","component","Post","handleInputChange","e","defineProperty","target","value","onSubmit","_this$state","title","body","author","params","URLSearchParams","fetch","method","then","alert","catch","_this$state2","type","onChange","Blog","articles","history","blog_post_Post","map","article","key","push","concat","_this3","resp","json","_this4","withRouter","Contact","Article","match","response","Footer","App","toggleBreadcrumbs","console","log","changeFeatureTitle","BrowserRouter","src_header_Header","feature","render","src_blog_Blog","footer","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1058732d.chunk.js","sourcesContent":["import Nav from './Nav'\nexport default Nav","import React, { Component, Fragment } from 'react'\nimport handler from 'react-handlers'\nimport { Route, Link } from 'react-router-dom'\nimport './Nav.css'\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      trigger: 0\n    }\n  }\n  handleToggleMenu = () => {\n    const { trigger } = this.state\n    this.setState({\n      trigger: !trigger\n    })\n  }\n  handleCloseMenu = () => {\n    this.setState({\n      trigger: 0\n    })\n  }\n\n  render() {\n    const { trigger } = this.state\n    return (\n     <Fragment>\n      <nav className={trigger ? 'nav--active' : 'nav'}>\n        <ul className={trigger ? 'nav__list--active' : 'nav__list'} >\n          <Route exact='true' children={() => (\n            <li><Link name=\"blog\" to='blog' \n              onClick={handler(this.handleCloseMenu, this.props.onClick)} \n            >blog</Link></li>\n          )}/>\n          <Route exact='true' children={() => (\n            <li><Link name=\"contact\" to='contact' \n              onClick={handler(this.handleCloseMenu, this.props.onClick)}\n            >Contact</Link></li>\n          )}\n          />\n        </ul>\n      </nav>\n      <div className=\"nav__trigger\" onClick={this.handleToggleMenu}>menu</div>\n     </Fragment>\n    )\n  }\n}\n\nexport default Nav\n","import React, { Component } from 'react'\nimport { Link, Route } from \"react-router-dom\";\nimport './Header.css'\nimport Nav from './nav'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <div id=\"Header\">\n        <div className=\"container\">\n          <Route\n            path='/' \n            exact='true' // exact 是什麼意思 ？\n            children={() => (\n              <Link id=\"logo\" to='/' >React</Link>\n            )}\n          />\n          <Nav onClick={this.props.onClick} />\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport './Feature.css'\n\nfunction Breadcrumbs() {\n  return(\n    <div className=\"breadcrumbs\">\n      <ul>\n        <li><Link to=\"/\">blog</Link></li>\n        <li>article</li>\n      </ul>\n    </div>\n  )\n}\n\nclass Feature extends Component {\n  constructor(props){\n    super(props)\n  }\n  render() {\n    const { featureTitle } = this.props\n    return (\n      <section className=\"feature\">\n        <div className=\"container\">\n          <h1 className=\"feature__title\">{featureTitle}</h1>\n          <Route exact path=\"/blog/:id\" component={Breadcrumbs} /> \n        </div>\n      </section>\n    )\n  }\n}\n\nexport default Feature","import Feature from './Feature'\nexport default Feature","import React, { Component } from 'react'\nimport './Post.css'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      body: '',\n      author: 'test3'\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value // 這個技巧需要理解清楚，如果不用這個技巧要怎麼做 ？\n    })\n  }\n\n  onSubmit = () => {\n    const { title, body, author } = this.state\n    if(title==='' || body==='') {\n      alert('請輸入內容')\n      return\n    }\n    const url =  `http://45.55.26.18:3310/posts`\n    const params = new URLSearchParams({ // 為什麼 Fetch API 要使用這種方式帶資料 ？new ? URLSearchParams ?\n      title,\n      body,\n      author\n    })\n    fetch(url, {\n      method: 'POST',\n      body: params\n    })\n    .then(() => {\n      alert('Success')\n      this.setState({\n        title: '',\n        body: ''\n      })\n    }).catch(() => {\n      alert('Error')\n    })\n    \n  }\n\n  render() {\n    const { title, body } = this.state\n    return (\n      <div className=\"Post\">\n        <div className=\"container\">\n          <label>title\n            <input\n              className=\"col-12\"\n              name=\"title\" \n              type=\"text\" \n              value={title} \n              onChange={this.handleInputChange} \n            />\n          </label>\n          <label className=\"col-12\" >content\n            <textarea\n              className=\"col-12\"\n              name=\"body\" \n              value={body} \n              onChange={this.handleInputChange} \n            />\n          </label> \n          <button onClick={this.onSubmit}>Submit</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post","import React, { Component } from 'react'\nimport handler from 'react-handlers'\nimport { withRouter } from 'react-router-dom'\nimport './Blog.css'\nimport Post from './post'\n\nclass Blog extends Component {\n  constructor() {\n    super()\n    this.state = {\n      articles: [] // 為什麼要設為陣列不是物件 ？因為 json 格式的資料是一個陣列 ？json 格式和 XML 格式有什麼不同 ？\n    }\n  }\n  render() {\n    const { articles } = this.state\n    const { history } = this.props // history 是從哪裡傳過來的 ？\n    return (\n      <div className=\"Blog\">\n        <Post />\n        <div className=\"post__list container\">\n          {articles.map(article => (\n            <div \n              key={article.id}\n              name=\"post\"\n              className=\"post__article col-4 wrapper\"\n              onClick={handler(\n                this.props.onClick,\n                () => {\n                  history.push(`/blog/${article.id}`) // history 是什麼意思 ？為什麼加上這個網址就知道在哪個頁面了 ？哪裡可能會有答案 ？RESTful API 、React Router 文件\n                })}\n            >\n              <h1>{article.title}</h1>\n              <h3>{article.author}</h3>\n              <p>{article.body}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n  componentDidMount() {\n    const url = 'http://45.55.26.18:3310/posts'\n    fetch(url) // Fetch API 的格式是什麼 ？\n    /* 以下箭頭函式的邏輯看不太懂，可以把他換回一般函式看看 */\n    .then(resp => resp.json()) // .then 是什麼意思 ？\n    .then(json => this.setState({ // 不理解 .then 接 json 指向 this.setState 函式的邏輯\n      /* 如何在接收资料的时候对资料做检查 ？ */\n      articles: json\n    }))\n  }\n  componentDidUpdate() {// 資料庫更新就 render // 不理解這個 method \n    const url = 'http://45.55.26.18:3310/posts'\n    fetch(url) \n    .then(resp => resp.json()) \n    .then(json => this.setState({ \n      articles: json\n    }))\n  }\n}\n\nexport default withRouter(Blog)","import React, { Component } from 'react'\nimport './Contact.css'\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div className=\"Contact container\">\n        <div className=\"Contact__content wrapper\">\n          <label > name\n            <input type=\"text\" className=\"col-4\"/>\n          </label>\n          <label> e-mail \n            <input type=\"email\" className=\"col-4\"/>\n          </label>\n          <label >\n            content\n            <textarea className=\"col-12\" />\n          </label>\n          <button onClick={this.onSubmit}>Submit</button> \n        </div>   \n      </div>\n    ) \n  }\n}\n\nexport default Contact","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Article.css' \n\nclass Article extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      article: {}\n    }\n  }\n  componentDidMount() {\n    const id = this.props.match.params.id // match 從哪裡來 ？裡面的資料是從 Route 的 path 來的\n    fetch(`http://45.55.26.18:3310/posts/${id}`)\n    .then(response => response.json())\n    .then(json => this.setState({\n      article: json\n    }))\n  }\n  render() {\n    const { article } = this.state\n    return (\n      <div className=\"Article container\">\n        <div className=\"Article__content wrapper col-12\">\n          <h1>{!article.title ? 'Loading...': article.title} <Link to=\"/blog\">back</Link></h1>\n          <p>{article.body}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Article","import Footer from './Footer'\nexport default Footer","import React, { Component } from 'react'\nimport './Footer.css'\n\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        2018 Lidemy Mentor Program 2nd Futian Shen\n      </footer>\n    )\n  }\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\n\nimport Header from './header'\nimport Feature from './feature'\nimport Blog from './blog'\nimport Contact from './contact'\nimport Article from './article'\nimport Footer from './footer'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      featureTitle: 'blog'\n    }\n  }\n  toggleBreadcrumbs = () => {\n    console.log('breadcrumbs')\n  }\n  changeFeatureTitle = (e) => {\n    this.setState({\n      featureTitle: e.target.name\n    })\n  }\n  render() {\n    const { featureTitle } = this.state\n    return (\n     <Router>\n       <div className=\"App\">\n        <Header onClick={this.changeFeatureTitle}/>\n        <Feature featureTitle={featureTitle} />\n        <Route exact path=\"/\" component={Blog} /> \n        <Route exact path=\"/blog\" render={() => <Blog onClick={this.toggleBreadcrumbs}  />} /> {/* path 的值大小寫沒差別 ？*/}\n        <Route path=\"/blog/:id\" component={Article} /> {/* 不理解 path 怎麼運作的，為什麼 path 使用 \"blog/:id 會被 上面的 /blog 蓋掉 ？在   path 前面加上 exact 就不會了 ？ */}\n        <Route path=\"/contact\" component={Contact} />\n        <Footer />\n      </div>\n     </Router> \n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'normalize.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}